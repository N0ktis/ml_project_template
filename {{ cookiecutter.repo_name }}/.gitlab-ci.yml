stages:
  - train models
  - run cml
  - publish models

# don't pull all the data we have
variables:
  GIT_LFS_SKIP_SMUDGE: 1
  MODEL_REPO: my_model

# To use `rules` in jobs
include:
  - template: "Workflows/Branch-Pipelines.gitlab-ci.yml"

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Templates
#

# Autoupload only on master and release branches
.job_that_is_started_either_manually_or_automatically_depending_on_branch:
  rules:
    - if: "$CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_COMMIT_BRANCH !~ /^release-.*$/"
      when: manual
    - when: on_success

default:
  tags:
    - ml-stand-01.rd.ptsecurity.ru

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Jobs
#

# Train model
train model:
  stage: train models
  image: crossbuilder:latest
  artifacts:
    paths:
      - artifacts/*
    expire_in: "24 hours"
  script:
    # get data
    - source ./build_functions.sh
    - get_data

    # training
    - sh ./build_and_extract.sh
    - ls -lh ./artifacts

# Run CML to send evaluation report to MR
cml report:
  stage: run cml
  image: dvcorg/cml-py3:latest
  needs:
    - train model
  script:
    - export NODE_TLS_REJECT_UNAUTHORIZED=0
    - cml-send-comment artifacts/report.md

# Publish model files packed as .tar.gz archive to Artifactory
publish model:
  stage: publish models
  image: docker.ptsecurity.ru/crossbuilder:latest
  extends: .job_that_is_started_either_manually_or_automatically_depending_on_branch
  variables:
    ARTIFACTORY_PATH: "ptaf-ml-model.snapshot/${MODEL_REPO}"
  needs:
    - train model
  script:
    - ARTIFACT_NAME="${MODEL_REPO}.${CI_PIPELINE_ID}.tar.gz"
      FULL_ARTIFACT_PATH="${ARTIFACTORY_PATH}/${ARTIFACT_NAME}"

    - cd artifacts

    # debug print
    - ls -lh .

    - tar czf $ARTIFACT_NAME *

    # check if artifact already exists
    - if `crossbuilder run CheckArtifactExist
      --auth "$DEPLOY_CI_AUTH"
      --path "$FULL_ARTIFACT_PATH"`; then
      echo "ERROR - artifact $FULL_ARTIFACT_PATH already exists";
      exit 1;
      fi;

    # upload artifacts
    - echo "./$ARTIFACT_NAME;$FULL_ARTIFACT_PATH" | tee ./upload_list.txt;
      crossbuilder run UploadArtifacts
      --auth "$DEPLOY_CI_AUTH"
      --upload_list "./upload_list.txt";
